{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/./master/nextflow_schema.json",
  "title": ". pipeline parameters",
  "description": "",
  "type": "object",
  "definitions": {
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/generic_options"
    }
  ],
  "properties": {
    "subworkflow": {
      "type": "string",
      "description": "One of <rnaseq|identify|analyze|preprocess|combine_databases>",
      "help_text": "rnaseq: runs transcriptome assembly pipeline\npreprocess: preprocess and calibrate mass spectrometry files\nthis expects raw\ncombine_databases: combine fasta files to create decoy database"
    },
    "manifest_file": {
      "type": "string",
      "description": "Path to mzML, mgf and raw manifest file",
      "help_text": "Required headers are indexed_mzML, mgf, and raw"
    },
    "pref": {
      "type": "string",
      "default": "UNSPECIFIED"
    },
    "results": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED"
    },
    "logs": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Logs"
    },
    "tax_id": {
      "type": "string",
      "default": "1758319"
    },
    "denovo": {
      "type": "boolean",
      "default": false,
      "description": "Run denovo searches"
    },
    "to_construct": {
      "type": "string",
      "description": "text file containing all the protein sources for the database search engines, in fasta format\nPlease ensure that there are no blank lines in this file"
    },
    "db_loc": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/runs"
    },
    "db_spec": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/runs/UNSPECIFIED.DB.txt"
    },
    "blast_db": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/blast_db/downloaded"
    },
    "bin": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/bin"
    },
    "pep_thresh": {
      "type": "integer",
      "default": 1
    },
    "fdr": {
      "type": "number",
      "default": 0.05
    },
    "pfam2go": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/pfam2go"
    },
    "pfam_entries": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/pfam_entries.tsv"
    },
    "interpro2go": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/interpro2go"
    },
    "rawfastq": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/RNA/*.fastq"
    },
    "rnadata": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/RNA-seq"
    },
    "assembled": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/RNA-seq/4-assembly"
    },
    "translated": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/RNA-seq/6-translated"
    },
    "decoy_prefix": {
      "type": "string",
      "default": "rev_"
    },
    "smsnetmodel": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/reference/SMSNet/smsnet.model.m/smsnet"
    },
    "casanovomodel": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/reference/casanovo_massivekb.ckpt"
    },
    "pepnetmodel": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/reference/pepNetmodel.h5"
    },
    "smsnet_exe": {
      "type": "string",
      "default": "/home/shannc/tools/SMSNet/run.py"
    },
    "pepnet_exe": {
      "type": "string",
      "default": "/home/shannc/tools/PepNet/denovo.py"
    },
    "dotnet6": {
      "type": "string",
      "default": "/home/shannc/tools/dotnet6/dotnet"
    },
    "thermo_parser": {
      "type": "string",
      "default": "/home/shannc/tools/ThermoRawFileParser/ThermoRawFileParser.exe"
    },
    "flashlfq": {
      "type": "string",
      "default": "/home/shannc/tools/FlashLFQ/CMD.dll"
    },
    "msgf": {
      "type": "string",
      "default": "/home/shannc/tools/MSGFPlus/MSGFPlus.jar"
    },
    "eggnog_data_dir": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/tools/eggnog-mapper-data"
    },
    "eggnog_db_fasta": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/tools/eggnog_proteins.fasta"
    },
    "ontologizer_jar": {
      "type": "string",
      "default": "/home/shannc/tools/Ontologizer.jar"
    },
    "go": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/reference/go.obo"
    },
    "go_embeddings": {
      "type": "string",
      "default": "/mnt/data/shannc/data/nf/data/reference/go_embedded.npz"
    },
    "species_spec": {
      "type": "string",
      "default": "Chironex_indrasaksajiae"
    },
    "config_dir": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/config"
    },
    "signalp6model": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/reference/signalp6"
    },
    "kegg2go": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/kegg_reaction2go"
    },
    "ec2go": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/Databases/ec2go"
    },
    "esm": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/models/esm2_t36_3B_UR50D.pt"
    },
    "prottrans": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/models/prot_t5_xl_uniref50"
    },
    "p1": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/1-First_pass"
    },
    "p2": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/results/UNSPECIFIED/2-Second_pass"
    },
    "uniprot_reviewed": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/protein_databases/comparison_taxa/reviewed_all.tsv"
    },
    "comparison_esm": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/protein_databases/uniprot_embeddings/esm_out"
    },
    "comparison_prottrans": {
      "type": "string",
      "default": "/mnt/data/shannc/nf/data/protein_databases/uniprot_embeddings/pt_embeddings.hdf5"
    },
    "reticulate": {
      "type": "string",
      "default": "/home/shannc/anaconda3/envs/reticulate"
    },
    "protlm": {
      "type": "string",
      "default": "/home/shannc/anaconda3/envs/protlm"
    },
    "esmfold": {
      "type": "string",
      "default": "/home/shannc/anaconda3/envs/esmfold"
    },
    "msfragger": {
      "type": "string",
      "default": "/home/shannc/workflow/tools/MSFragger-3.7/MSFragger-3.7.jar"
    }
  },
  "required": ["subworkflow", "manifest_file"]
}
